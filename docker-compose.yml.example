version: '2'

services:
  # PostgreSQL
  postgres:
    restart: always
    image: postgres:latest
    ports:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=rndb
      - POSTGRES_USER=rnkg
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=rnkg2017
      - POSTGRES_PORT=5432

  backend:
    restart: always
    build: ./backend
    command: /usr/local/bin/gunicorn rn.wsgi:application --log-file /usr/src/backend/gunicorn.log -w 2 -b :8000
    links:
      - postgres:postgres
    volumes:
      - /usr/src/backend/static
      - media:/usr/src/app/media
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=rndb
      - POSTGRES_USER=rnkg
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=rnkg2017
      - POSTGRES_PORT=5432
      - SECRET_KEY=aaaa
      - DJ_ALLOWED_HOSTS=104.131.4.58 localhost 127.0.0.1 sevenrow.info
      - VIRTUAL_HOST=sevenrow.info
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=sevenrow.info
      - LETSENCRYPT_EMAIL=dan.chambylov@gmail.com
    expose:
      - "8000"

  nginx:
    restart: always
    image: nginx
    container_name: nginx
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/volumes/proxy/certs:/etc/nginx/certs:ro"
      - /www/static
      - /www/media
    volumes_from:
      - backend
    links:
      - backend:backend

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/volumes/proxy/templates:/etc/docker-gen/templates:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
volumes:
  pgdata:
  media:
